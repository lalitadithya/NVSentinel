# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Build Container'
description: 'Build container for validation without publishing'

inputs:
  safe_ref_name:
    description: 'Safe reference name for container tags'
    required: true
  nvcr_container_repo:
    description: 'Container registry URL'
    required: true
  container_org:
    description: 'Container organization/namespace'
    required: true
  make_command:
    description: 'Make command to run for building (should use docker-build, not docker-publish)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: network=host

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-pr-${{ github.event.pull_request.head.sha || github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-pr-
          ${{ runner.os }}-buildx-

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Build container (validation only)
      shell: bash
      env:
        SAFE_REF_NAME: ${{ inputs.safe_ref_name }}
        NVCR_CONTAINER_REPO: ${{ inputs.nvcr_container_repo }}
        NGC_ORG: ${{ inputs.container_org }}
        DOCKER_BUILDKIT: 1
        BUILDX_CACHE_FROM: type=local,src=/tmp/.buildx-cache
        BUILDX_CACHE_TO: type=local,dest=/tmp/.buildx-cache-new,mode=max
      run: |
        echo "Building container for validation..."
        ${{ inputs.make_command }}

        # Clean up built images to save space
        docker image prune -f

        # Move cache to prevent it from growing indefinitely
        if [ -d "/tmp/.buildx-cache-new" ]; then
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        fi